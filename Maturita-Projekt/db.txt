CREATE DATABASE onlined;

use onlined;


CREATE TABLE `users` (
  `id` int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `firstname` varchar(100) NOT NULL,
  `surname` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL UNIQUE,
  `password` varchar(100) NOT NULL,
  `adminRole` int(5) NOT NULL,
  `Block` int(10) NOT NULL DEFAULT '0',
  `registrationd` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users_backup (
id int(50) NOT NULL PRIMARY KEY,
firstname varchar(100) NOT NULL,
surname varchar(100) NOT NULL,
email varchar(100) NOT NULL ,
password_b varchar(100) NOT NULL,
adminRole int(5) NOT NULL,
Block int(10) NOT NULL ,
registrationd DATE NOT NULL );


CREATE TABLE `denik`(
`idd` INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`jmeno` VARCHAR(255)
)


CREATE TABLE `u2d`(
`id_zapis` INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`id_u` INT(100) NOT NULL,
`id_d` INT(100) NOT NULL,
 FOREIGN KEY(id_u) REFERENCES users(id),
 FOREIGN KEY(id_d) REFERENCES denik(idd)
)



CREATE TABLE `messages`(
  `id_message` INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `description` TEXT NOT NULL,
  `message` TEXT NOT NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE `m2d`(
  `id_zapis` INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `id_d` INT(100) NOT NULL,
  `id_m` INT(100) NOT NULL,
  FOREIGN KEY(id_d) REFERENCES denik(idd),
  FOREIGN KEY(id_m) REFERENCES messages(id_message)
);



DELIMITER //

CREATE PROCEDURE `backup_users`()
BEGIN
    INSERT INTO users_backup (id, firstname, surname, email, password_b, adminRole, Block, registrationd)
    SELECT id, firstname, surname, email, password, adminRole, Block, registrationd FROM users ORDER BY id DESC LIMIT 1;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER `backup_users_trigger` AFTER INSERT ON `users`
FOR EACH ROW
BEGIN
    CALL backup_users();
END//

DELIMITER ;




